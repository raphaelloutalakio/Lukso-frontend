/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUnset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUnset__factory>;
    getContractFactory(
      name: "ERC725Y",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC725Y__factory>;
    getContractFactory(
      name: "ERC725YCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC725YCore__factory>;
    getContractFactory(
      name: "IERC725Y",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC725Y__factory>;
    getContractFactory(
      name: "LSP17Extendable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP17Extendable__factory>;
    getContractFactory(
      name: "ILSP1UniversalReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP1UniversalReceiver__factory>;
    getContractFactory(
      name: "ILSP1UniversalReceiverDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP1UniversalReceiverDelegate__factory>;
    getContractFactory(
      name: "LSP4DigitalAssetMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP4DigitalAssetMetadata__factory>;
    getContractFactory(
      name: "ILSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP7DigitalAsset__factory>;
    getContractFactory(
      name: "LSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7DigitalAsset__factory>;
    getContractFactory(
      name: "LSP7DigitalAssetCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7DigitalAssetCore__factory>;
    getContractFactory(
      name: "ILSP8IdentifiableDigitalAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP8IdentifiableDigitalAsset__factory>;
    getContractFactory(
      name: "LSP8IdentifiableDigitalAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAsset__factory>;
    getContractFactory(
      name: "LSP8IdentifiableDigitalAssetCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAssetCore__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERA__factory>;
    getContractFactory(
      name: "ERAHomiNft",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERAHomiNft__factory>;
    getContractFactory(
      name: "MyToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyToken__factory>;
    getContractFactory(
      name: "UniversalReceiverDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniversalReceiverDelegate__factory>;

    getContractAt(
      name: "OwnableUnset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUnset>;
    getContractAt(
      name: "ERC725Y",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC725Y>;
    getContractAt(
      name: "ERC725YCore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC725YCore>;
    getContractAt(
      name: "IERC725Y",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC725Y>;
    getContractAt(
      name: "LSP17Extendable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP17Extendable>;
    getContractAt(
      name: "ILSP1UniversalReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP1UniversalReceiver>;
    getContractAt(
      name: "ILSP1UniversalReceiverDelegate",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP1UniversalReceiverDelegate>;
    getContractAt(
      name: "LSP4DigitalAssetMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP4DigitalAssetMetadata>;
    getContractAt(
      name: "ILSP7DigitalAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP7DigitalAsset>;
    getContractAt(
      name: "LSP7DigitalAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7DigitalAsset>;
    getContractAt(
      name: "LSP7DigitalAssetCore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7DigitalAssetCore>;
    getContractAt(
      name: "ILSP8IdentifiableDigitalAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP8IdentifiableDigitalAsset>;
    getContractAt(
      name: "LSP8IdentifiableDigitalAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8IdentifiableDigitalAsset>;
    getContractAt(
      name: "LSP8IdentifiableDigitalAssetCore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8IdentifiableDigitalAssetCore>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERA>;
    getContractAt(
      name: "ERAHomiNft",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERAHomiNft>;
    getContractAt(
      name: "MyToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyToken>;
    getContractAt(
      name: "UniversalReceiverDelegate",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UniversalReceiverDelegate>;

    deployContract(
      name: "OwnableUnset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUnset>;
    deployContract(
      name: "ERC725Y",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC725Y>;
    deployContract(
      name: "ERC725YCore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC725YCore>;
    deployContract(
      name: "IERC725Y",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC725Y>;
    deployContract(
      name: "LSP17Extendable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP17Extendable>;
    deployContract(
      name: "ILSP1UniversalReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP1UniversalReceiver>;
    deployContract(
      name: "ILSP1UniversalReceiverDelegate",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP1UniversalReceiverDelegate>;
    deployContract(
      name: "LSP4DigitalAssetMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP4DigitalAssetMetadata>;
    deployContract(
      name: "ILSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP7DigitalAsset>;
    deployContract(
      name: "LSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7DigitalAsset>;
    deployContract(
      name: "LSP7DigitalAssetCore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7DigitalAssetCore>;
    deployContract(
      name: "ILSP8IdentifiableDigitalAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP8IdentifiableDigitalAsset>;
    deployContract(
      name: "LSP8IdentifiableDigitalAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAsset>;
    deployContract(
      name: "LSP8IdentifiableDigitalAssetCore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAssetCore>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ERA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERA>;
    deployContract(
      name: "ERAHomiNft",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERAHomiNft>;
    deployContract(
      name: "MyToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyToken>;
    deployContract(
      name: "UniversalReceiverDelegate",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniversalReceiverDelegate>;

    deployContract(
      name: "OwnableUnset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUnset>;
    deployContract(
      name: "ERC725Y",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC725Y>;
    deployContract(
      name: "ERC725YCore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC725YCore>;
    deployContract(
      name: "IERC725Y",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC725Y>;
    deployContract(
      name: "LSP17Extendable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP17Extendable>;
    deployContract(
      name: "ILSP1UniversalReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP1UniversalReceiver>;
    deployContract(
      name: "ILSP1UniversalReceiverDelegate",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP1UniversalReceiverDelegate>;
    deployContract(
      name: "LSP4DigitalAssetMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP4DigitalAssetMetadata>;
    deployContract(
      name: "ILSP7DigitalAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP7DigitalAsset>;
    deployContract(
      name: "LSP7DigitalAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7DigitalAsset>;
    deployContract(
      name: "LSP7DigitalAssetCore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7DigitalAssetCore>;
    deployContract(
      name: "ILSP8IdentifiableDigitalAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP8IdentifiableDigitalAsset>;
    deployContract(
      name: "LSP8IdentifiableDigitalAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAsset>;
    deployContract(
      name: "LSP8IdentifiableDigitalAssetCore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAssetCore>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ERA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERA>;
    deployContract(
      name: "ERAHomiNft",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERAHomiNft>;
    deployContract(
      name: "MyToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyToken>;
    deployContract(
      name: "UniversalReceiverDelegate",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniversalReceiverDelegate>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
