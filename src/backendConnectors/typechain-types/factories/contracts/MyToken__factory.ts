/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyToken, MyTokenInterface } from "../../contracts/MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_MsgValueDisallowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "storedData",
        type: "bytes",
      },
    ],
    name: "InvalidExtensionAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InvalidFunctionSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenNameNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenSymbolNotEditable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "authorizedAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LSP7AmountExceedsAuthorizedAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LSP7AmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7CannotSendToSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7CannotSendWithAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7CannotUseAddressZeroAsOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7DecreasedAllowanceBelowZero",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7InvalidTransferBatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP7NotifyTokenReceiverContractMissingLSP1Interface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP7NotifyTokenReceiverIsEOA",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7TokenContractCannotHoldValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7TokenOwnerCannotBeOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSelector",
        type: "bytes4",
      },
    ],
    name: "NoExtensionFoundForFunctionSelector",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "callerAddress",
        type: "address",
      },
    ],
    name: "OwnableCallerNotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableCannotSetZeroAddressAsOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "AuthorizedOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "DataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "RevokedOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "authorizeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "authorizedAmountFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "decreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getDataBatch",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "getOperatorsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "revokeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setDataBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "force",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201825260048152635553444360e01b602080830191909152825180840190935260038352621554d160ea1b908301529033600083838380806200006e576040516306b620db60e21b815260040160405180910390fd5b62000084816200019960201b62000afc1760201c565b50620000db7feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b8152506200020760201b62000b6a1760201c565b620001157fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b846200020760201b62000b6a1760201c565b6200014f7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b836200020760201b62000b6a1760201c565b50506002805460ff19169215159290921790915550506040805160208101909152600081526200019392503391506a084595161401484a0000009060019062000260565b62000862565b6000546001600160a01b038281169116146200020457600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0383161790555b50565b6000828152600160205260409020620002218282620005be565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051620002549190620006de565b60405180910390a25050565b6001600160a01b0384166200028857604051630d2d5ec360e41b815260040160405180910390fd5b82600360008282546200029c9190620006fa565b90915550506001600160a01b03841660009081526004602052604081208054859290620002cb908490620006fa565b90915550506040516001600160a01b0385169060009033907f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a69062000316908890889088906200071c565b60405180910390a460008085858460405160200162000339949392919062000748565b60408051601f198184030181529190529050620003588584836200035f565b5050505050565b6200037d83636bb56a1460e01b6200048d60201b62000bbf1760201c565b156200042357604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490620003d3907f20804611b3e2ea21c480dc465142210acf4a2485947541770ec1fb87dee4a55c90859060040162000787565b6000604051808303816000875af1158015620003f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200041d9190810190620007aa565b50505050565b8162000488576001600160a01b0383163b1562000463576040516353047ddb60e11b81526001600160a01b03841660048201526024015b60405180910390fd5b6040516309b091fd60e21b81526001600160a01b03841660048201526024016200045a565b505050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d9150600051905082801562000500575060208210155b80156200050d5750600081115b9450505050505b92915050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200054557607f821691505b6020821081036200056657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200048857600081815260208120601f850160051c81016020861015620005955750805b601f850160051c820191505b81811015620005b657828155600101620005a1565b505050505050565b81516001600160401b03811115620005da57620005da6200051a565b620005f281620005eb845462000530565b846200056c565b602080601f8311600181146200062a5760008415620006115750858301515b600019600386901b1c1916600185901b178555620005b6565b600085815260208120601f198616915b828110156200065b578886015182559484019460019091019084016200063a565b50858210156200067a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60005b83811015620006a75781810151838201526020016200068d565b50506000910152565b60008151808452620006ca8160208601602086016200068a565b601f01601f19169290920160200192915050565b602081526000620006f36020830184620006b0565b9392505050565b808201808211156200051457634e487b7160e01b600052601160045260246000fd5b83815282151560208201526060604082015260006200073f6060830184620006b0565b95945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906200077d90830184620006b0565b9695505050505050565b828152604060208201526000620007a26040830184620006b0565b949350505050565b600060208284031215620007bd57600080fd5b81516001600160401b0380821115620007d557600080fd5b818401915084601f830112620007ea57600080fd5b815181811115620007ff57620007ff6200051a565b604051601f8201601f19908116603f011681019083821181831017156200082a576200082a6200051a565b816040528281528760208487010111156200084457600080fd5b620008578360208301602088016200068a565b979650505050505050565b6123fe80620008726000396000f3fe6080604052600436106101235760003560e01c8063760d9bba116100a0578063b49506fd11610064578063b49506fd146103c2578063ca3631e7146103e2578063d72fc29a14610402578063dedff9c61461042f578063f2fde38b1461045c5761017e565b8063760d9bba146103345780637b204c4e146103545780637f23690c146103745780638da5cb5b1461038757806397902421146103af5761017e565b806354f6127f116100e757806354f6127f1461027c57806365aeaa95146102a95780636a627842146102c957806370a08231146102e9578063715018a61461031f5761017e565b806301ffc9a7146101bf57806318160ddd146101f45780632bc1da82146102135780632d7667c914610235578063313ce567146102555761017e565b3661017e57346000036101655760405163e5099ee360e01b815260040161015c9060208082526004908201526000604082015260600190565b60405180910390fd5b604051630e23d6b760e21b815260040160405180910390fd5b600036606060048210156101a957828260405163e5099ee360e01b815260040161015c92919061191b565b6101b3838361047c565b80519350602001915050f35b3480156101cb57600080fd5b506101df6101da36600461194a565b610571565b60405190151581526020015b60405180910390f35b34801561020057600080fd5b506003545b6040519081526020016101eb565b34801561021f57600080fd5b5061023361022e366004611a53565b6105a5565b005b34801561024157600080fd5b50610233610250366004611c85565b610603565b34801561026157600080fd5b5061026a6106f2565b60405160ff90911681526020016101eb565b34801561028857600080fd5b5061029c610297366004611d56565b61070b565b6040516101eb9190611dbf565b3480156102b557600080fd5b506102056102c4366004611dd2565b610716565b3480156102d557600080fd5b506102336102e4366004611e05565b61077c565b3480156102f557600080fd5b50610205610304366004611e05565b6001600160a01b031660009081526004602052604090205490565b34801561032b57600080fd5b5061023361079c565b34801561034057600080fd5b5061023361034f366004611e20565b6107b0565b34801561036057600080fd5b5061023361036f366004611a53565b610809565b610233610382366004611e8b565b610881565b34801561039357600080fd5b506000546040516001600160a01b0390911681526020016101eb565b6102336103bd366004611ed1565b6108b6565b3480156103ce57600080fd5b506102336103dd366004611a53565b610976565b3480156103ee57600080fd5b506102336103fd366004611f2a565b6109ba565b34801561040e57600080fd5b5061042261041d366004611e05565b6109fa565b6040516101eb9190611f61565b34801561043b57600080fd5b5061044f61044a366004611fae565b610a1e565b6040516101eb9190611fe2565b34801561046857600080fd5b50610233610477366004611e05565b610ac8565b606060006104956000356001600160e01b031916610c48565b90506001600160a01b0381166104cc5760405163bb370b2b60e01b81526001600160e01b031960003516600482015260240161015c565b600080826001600160a01b031634878733346040516020016104f19493929190612044565b60408051601f198184030181529082905261050b9161206f565b60006040518083038185875af1925050503d8060008114610548576040519150601f19603f3d011682016040523d82523d6000602084013e61054d565b606091505b5091509150811561056257925061056b915050565b80518060208301fd5b92915050565b60006001600160e01b031982166302a8ca8960e11b1480610596575061059682610cc1565b8061056b575061056b82610ce6565b6000826105b28533610716565b6105bc91906120a1565b90506105ca33858385610d23565b60003382846040516020016105e1939291906120b4565b60405160208183030381529060405290506105fc8582610e92565b5050505050565b8451845181141580610616575083518114155b80610622575082518114155b8061062e575081518114155b1561064c5760405163263eee8d60e01b815260040160405180910390fd5b60005b818110156106e9576106e187828151811061066c5761066c6120e4565b6020026020010151878381518110610686576106866120e4565b60200260200101518784815181106106a0576106a06120e4565b60200260200101518785815181106106ba576106ba6120e4565b60200260200101518786815181106106d4576106d46120e4565b60200260200101516107b0565b60010161064f565b50505050505050565b60025460009060ff166107055750601290565b50600090565b606061056b82610f3e565b6000826001600160a01b0316826001600160a01b03160361075057506001600160a01b03811660009081526004602052604090205461056b565b506001600160a01b0380821660009081526006602090815260408083209386168352929052205461056b565b61079981600a600160405180602001604052806000815250610fe0565b50565b6107a46110cc565b6107ae6000610afc565b565b836001600160a01b0316856001600160a01b0316036107e157604051620b9afb60ec1b815260040160405180910390fd5b336001600160a01b038616146107fc576107fc338685611108565b6105fc8585858585611194565b60006108158433610716565b90508281101561083857604051630ef76c3560e01b815260040160405180910390fd5b82810361084733868386610d23565b600033828560405160200161085e939291906120b4565b60405160208183030381529060405290506108798682610e92565b505050505050565b6108896110cc565b34156108a85760405163f36ba73760e01b815260040160405180910390fd5b6108b28282611316565b5050565b6108be6110cc565b34156108dd5760405163f36ba73760e01b815260040160405180910390fd5b80518251146108ff57604051633bcc897960e01b815260040160405180910390fd5b8151600003610921576040516397da5f9560e01b815260040160405180910390fd5b60005b825181101561097157610969838281518110610942576109426120e4565b602002602001015183838151811061095c5761095c6120e4565b6020026020010151611316565b600101610924565b505050565b61098233848484610d23565b6000338383604051602001610999939291906120b4565b60405160208183030381529060405290506109b48482610e92565b50505050565b6109c73383600084610d23565b6000336000836040516020016109df939291906120fa565b60405160208183030381529060405290506109718382610e92565b6001600160a01b038116600090815260056020526040902060609061056b906113fe565b606081516001600160401b03811115610a3957610a39611990565b604051908082528060200260200182016040528015610a6c57816020015b6060815260200190600190039081610a575790505b50905060005b8251811015610ac257610a9d838281518110610a9057610a906120e4565b6020026020010151610f3e565b828281518110610aaf57610aaf6120e4565b6020908102919091010152600101610a72565b50919050565b610ad06110cc565b6001600160a01b038116610af7576040516306b620db60e21b815260040160405180910390fd5b610799815b6000546001600160a01b0382811691161461079957600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0383166001600160a01b031990911617905550565b6000828152600160205260409020610b8282826121a1565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610bb39190611dbf565b60405180910390a25050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610c31575060208210155b8015610c3d5750600081115b979650505050505050565b600080610c6c696773c5a04a6d4300884b60b11b6001600160e01b0319851661140b565b90506000610c7982610f3e565b90508051601414158015610c8d5750805115155b15610cad57806040516342bfe79f60e01b815260040161015c9190611dbf565b610cb681612260565b60601c949350505050565b60006001600160e01b0319821663a918fa6b60e01b148061056b575061056b8261145f565b600080610cf96301ffc9a760e01b610c48565b90506001600160a01b038116610d125750600092915050565b610d1c8184610bbf565b9392505050565b6001600160a01b038316610d4a576040516331aaf3b360e11b815260040160405180910390fd5b836001600160a01b0316836001600160a01b031603610d7c5760405163dab7504760e01b815260040160405180910390fd5b6001600160a01b0380851660009081526006602090815260408083209387168352929052208290558115610e1e576001600160a01b0384166000908152600560205260409020610dcc9084611494565b5081846001600160a01b0316846001600160a01b03167f0744b3de98efaff36606a0e67662fb8697adb0ed49d90730bdb4bbf885f3059784604051610e119190611dbf565b60405180910390a46109b4565b6001600160a01b0384166000908152600560205260409020610e4090846114a9565b50836001600160a01b0316836001600160a01b03167f9ebfc34ce0da1178c4be66252d63a8a173d733c4bbb049241ce142dc4f0e022883604051610e849190611dbf565b60405180910390a350505050565b610ea382631aed5a8560e21b610bbf565b156108b257604051631aed5a8560e21b81526001600160a01b03831690636bb56a1490610ef6907f386072cc5a58e61263b434c722725f21031cd06e7c552cfaa06db5de8a320dbc908590600401612297565b6000604051808303816000875af1925050508015610f3657506040513d6000823e601f3d908101601f19168201604052610f3391908101906122b0565b60015b610971575050565b6000818152600160205260409020805460609190610f5b90612127565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8790612127565b8015610fd45780601f10610fa957610100808354040283529160200191610fd4565b820191906000526020600020905b815481529060010190602001808311610fb757829003601f168201915b50505050509050919050565b6001600160a01b03841661100757604051630d2d5ec360e41b815260040160405180910390fd5b826003600082825461101991906120a1565b90915550506001600160a01b038416600090815260046020526040812080548592906110469084906120a1565b90915550506040516001600160a01b0385169060009033907f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a69061108f9088908890889061231d565b60405180910390a46000808585846040516020016110b0949392919061233e565b60405160208183030381529060405290506105fc8584836114be565b336110df6000546001600160a01b031690565b6001600160a01b0316146107ae5760405163bf1169c560e01b815233600482015260240161015c565b6001600160a01b03808316600090815260066020908152604080832093871683529290522054808211156111705760405163f3a6b69160e01b81526001600160a01b03808516600483015260248201839052851660448201526064810183905260840161015c565b6109b4838561117f858561237b565b60405180602001604052806000815250610d23565b6001600160a01b03851615806111b157506001600160a01b038416155b156111cf57604051630d2d5ec360e41b815260040160405180910390fd5b6001600160a01b03851660009081526004602052604090205480841115611222576040516308d4794960e01b8152600481018290526001600160a01b03871660248201526044810185905260640161015c565b6001600160a01b0386166000908152600460205260408120805486929061124a90849061237b565b90915550506001600160a01b038516600090815260046020526040812080548692906112779084906120a1565b92505081905550846001600160a01b0316866001600160a01b0316336001600160a01b03167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a68787876040516112cf9392919061231d565b60405180910390a46000868686856040516020016112f0949392919061233e565b604051602081830303815290604052905061130b87826115c6565b6106e98685836114be565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201611356576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa820161139657604051630eceab6760e31b815260040160405180910390fd5b60008281526001602052604090206113ae82826121a1565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2610100835111156113ef576113ea836000610100611671565b6113f1565b825b604051610bb39190611dbf565b60606000610d1c8361177e565b604080516001600160b01b0319841660208201526000602a82018190526001600160601b03198416602c830152918291016040516020818303038152906040529050806114579061238e565b949350505050565b60006001600160e01b031982166318a6a9a560e21b148061056b57506301ffc9a760e01b6001600160e01b031983161461056b565b6000610d1c836001600160a01b0384166117d9565b6000610d1c836001600160a01b038416611828565b6114cf83631aed5a8560e21b610bbf565b1561156957604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490611522907f20804611b3e2ea21c480dc465142210acf4a2485947541770ec1fb87dee4a55c908590600401612297565b6000604051808303816000875af1158015611541573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109b491908101906122b0565b81610971576001600160a01b0383163b156115a2576040516353047ddb60e11b81526001600160a01b038416600482015260240161015c565b6040516309b091fd60e21b81526001600160a01b038416600482015260240161015c565b6115d782631aed5a8560e21b610bbf565b156108b257604051631aed5a8560e21b81526001600160a01b03831690636bb56a149061162a907f429ac7a06903dbc9c13dfcb3c9d11df8194581fa047c96d7a4171fc7402958ea908590600401612297565b6000604051808303816000875af1158015611649573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097191908101906122b0565b60608161167f81601f6120a1565b10156116be5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161015c565b6116c882846120a1565b8451101561170c5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161015c565b60608215801561172b5760405191506000825260208201604052611775565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561176457805183526020928301920161174c565b5050858452601f01601f1916604052505b50949350505050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610fd457602002820191906000526020600020905b8154815260200190600101908083116117ba5750505050509050919050565b60008181526001830160205260408120546118205750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561056b565b50600061056b565b6000818152600183016020526040812054801561191157600061184c60018361237b565b85549091506000906118609060019061237b565b90508181146118c5576000866000018281548110611880576118806120e4565b90600052602060002001549050808760000184815481106118a3576118a36120e4565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806118d6576118d66123b2565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061056b565b600091505061056b565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60006020828403121561195c57600080fd5b81356001600160e01b031981168114610d1c57600080fd5b80356001600160a01b038116811461198b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156119ce576119ce611990565b604052919050565b60006001600160401b038211156119ef576119ef611990565b50601f01601f191660200190565b600082601f830112611a0e57600080fd5b8135611a21611a1c826119d6565b6119a6565b818152846020838601011115611a3657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611a6857600080fd5b611a7184611974565b92506020840135915060408401356001600160401b03811115611a9357600080fd5b611a9f868287016119fd565b9150509250925092565b60006001600160401b03821115611ac257611ac2611990565b5060051b60200190565b600082601f830112611add57600080fd5b81356020611aed611a1c83611aa9565b82815260059290921b84018101918181019086841115611b0c57600080fd5b8286015b84811015611b2e57611b2181611974565b8352918301918301611b10565b509695505050505050565b600082601f830112611b4a57600080fd5b81356020611b5a611a1c83611aa9565b82815260059290921b84018101918181019086841115611b7957600080fd5b8286015b84811015611b2e5780358352918301918301611b7d565b8035801515811461198b57600080fd5b600082601f830112611bb557600080fd5b81356020611bc5611a1c83611aa9565b82815260059290921b84018101918181019086841115611be457600080fd5b8286015b84811015611b2e57611bf981611b94565b8352918301918301611be8565b600082601f830112611c1757600080fd5b81356020611c27611a1c83611aa9565b82815260059290921b84018101918181019086841115611c4657600080fd5b8286015b84811015611b2e5780356001600160401b03811115611c695760008081fd5b611c778986838b01016119fd565b845250918301918301611c4a565b600080600080600060a08688031215611c9d57600080fd5b85356001600160401b0380821115611cb457600080fd5b611cc089838a01611acc565b96506020880135915080821115611cd657600080fd5b611ce289838a01611acc565b95506040880135915080821115611cf857600080fd5b611d0489838a01611b39565b94506060880135915080821115611d1a57600080fd5b611d2689838a01611ba4565b93506080880135915080821115611d3c57600080fd5b50611d4988828901611c06565b9150509295509295909350565b600060208284031215611d6857600080fd5b5035919050565b60005b83811015611d8a578181015183820152602001611d72565b50506000910152565b60008151808452611dab816020860160208601611d6f565b601f01601f19169290920160200192915050565b602081526000610d1c6020830184611d93565b60008060408385031215611de557600080fd5b611dee83611974565b9150611dfc60208401611974565b90509250929050565b600060208284031215611e1757600080fd5b610d1c82611974565b600080600080600060a08688031215611e3857600080fd5b611e4186611974565b9450611e4f60208701611974565b935060408601359250611e6460608701611b94565b915060808601356001600160401b03811115611e7f57600080fd5b611d49888289016119fd565b60008060408385031215611e9e57600080fd5b8235915060208301356001600160401b03811115611ebb57600080fd5b611ec7858286016119fd565b9150509250929050565b60008060408385031215611ee457600080fd5b82356001600160401b0380821115611efb57600080fd5b611f0786838701611b39565b93506020850135915080821115611f1d57600080fd5b50611ec785828601611c06565b60008060408385031215611f3d57600080fd5b611f4683611974565b915060208301356001600160401b03811115611ebb57600080fd5b6020808252825182820181905260009190848201906040850190845b81811015611fa25783516001600160a01b031683529284019291840191600101611f7d565b50909695505050505050565b600060208284031215611fc057600080fd5b81356001600160401b03811115611fd657600080fd5b61145784828501611b39565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561203757603f19888603018452612025858351611d93565b94509285019290850190600101612009565b5092979650505050505050565b8385823760609290921b6001600160601b031916919092019081526014810191909152603401919050565b60008251612081818460208701611d6f565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561056b5761056b61208b565b60018060a01b03841681528260208201526060604082015260006120db6060830184611d93565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038416815260ff831660208201526060604082018190526000906120db90830184611d93565b600181811c9082168061213b57607f821691505b602082108103610ac257634e487b7160e01b600052602260045260246000fd5b601f82111561097157600081815260208120601f850160051c810160208610156121825750805b601f850160051c820191505b818110156108795782815560010161218e565b81516001600160401b038111156121ba576121ba611990565b6121ce816121c88454612127565b8461215b565b602080601f83116001811461220357600084156121eb5750858301515b600019600386901b1c1916600185901b178555610879565b600085815260208120601f198616915b8281101561223257888601518255948401946001909101908401612213565b50858210156122505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b805160208201516001600160601b0319808216929190601483101561228f5780818460140360031b1b83161693505b505050919050565b8281526040602082015260006114576040830184611d93565b6000602082840312156122c257600080fd5b81516001600160401b038111156122d857600080fd5b8201601f810184136122e957600080fd5b80516122f7611a1c826119d6565b81815285602083850101111561230c57600080fd5b6120db826020830160208601611d6f565b83815282151560208201526060604082015260006120db6060830184611d93565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061237190830184611d93565b9695505050505050565b8181038181111561056b5761056b61208b565b80516020808301519190811015610ac25760001960209190910360031b1b16919050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d8e4515fc33e1d791d75c7a4181834536ddc7bc11f37500ae36b966e4df7771564736f6c63430008110033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
